name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [16.x, 18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build project
      run: npm run build
      
    - name: Run tests
      run: npm test
      
    - name: Run tests with coverage
      run: npm run test:coverage
      
    - name: Upload coverage to Codecov
      if: matrix.node-version == '20.x'
      uses: codecov/codecov-action@v5
      with:
        files: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: true
        token: ${{ secrets.CODECOV_TOKEN }}
        
    - name: Upload coverage reports
      if: matrix.node-version == '20.x'
      uses: actions/upload-artifact@v4
      with:
        name: coverage-reports
        path: |
          coverage/
          !coverage/tmp/
          
  lint:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run ESLint
      run: npm run lint
      
    - name: Check TypeScript
      run: npm run type-check
      
  build:
    runs-on: ubuntu-latest
    needs: [test, lint]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build project
      run: npm run build
      
    - name: Verify build artifacts
      run: |
        if [ ! -d dist ]; then
          echo "dist directory was not generated"
          exit 1
        fi
        if [ ! -f dist/index.js ]; then
          if [ -f dist/src/index.js ]; then
            echo "dist/index.js missing; using dist/src/index.js as reference"
          else
            echo "dist/index.js not found"
            exit 1
          fi
        fi
        if [ ! -f dist/cli/index.js ]; then
          if [ -f dist/src/cli/index.js ]; then
            echo "dist/cli/index.js missing; using dist/src/cli/index.js as reference"
          else
            echo "dist/cli/index.js not found"
            exit 1
          fi
        fi
        ls -la dist/
        
  security:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run security audit
      run: npm audit --audit-level=high
      
    - name: Check for vulnerabilities
      run: npm audit --audit-level=moderate
      
